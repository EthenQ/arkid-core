# Generated by Django 2.0.13 on 2020-02-08 10:34
# pylint: disable=line-too-long, invalid-name, missing-module-docstring, missing-class-docstring

import uuid
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('oneid_meta', '0068_auto_20191223_1116'),
    ]

    operations = [
        # DROP TABLE oneid_meta_org;
        migrations.CreateModel(
            name='Org',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('name', models.CharField(max_length=255, verbose_name='组织名')),
                ('dept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='oneid_meta.Dept', verbose_name='部门节点')),
                ('direct', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='direct', to='oneid_meta.Group', verbose_name='直属成员节点')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='oneid_meta.Group', verbose_name='组节点')),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='label', to='oneid_meta.Group', verbose_name='标签节点')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manager', to='oneid_meta.Group', verbose_name='管理员节点')),
            ],
            options={
                'abstract': False,
            },
        ),
        # DROP TABLE oneid_meta_orgmember;
        migrations.CreateModel(
            name='OrgMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('is_del', models.BooleanField(default=False, verbose_name='是否删除')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('order_no', models.IntegerField(default=0, verbose_name='排序号')),
                ('email', models.CharField(blank=True, default='', max_length=255, verbose_name='企业邮箱')),
                ('employee_number', models.CharField(blank=True, default='', max_length=255, verbose_name='工号')),
                ('position', models.CharField(blank=True, default='', max_length=255, verbose_name='职位')),
                ('hiredate', models.DateTimeField(blank=True, null=True, verbose_name='入职时间')),
                ('remark', models.CharField(blank=True, default='', max_length=512, verbose_name='备注')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='oneid_meta.Org', verbose_name='所属组织')),
            ],
        ),
        # ALTER TABLE oneid_meta_companyconfig ADD site_id int;
        migrations.RemoveField(
            model_name='companyconfig',
            name='site',
        ),
        migrations.AddField(
            model_name='orgmember',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='oneid_meta.User'),
        ),
        migrations.AddField(
            model_name='org',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='oneid_meta.User', verbose_name='所有者'),
        ),
        migrations.AddField(
            model_name='org',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role', to='oneid_meta.Group', verbose_name='角色节点'),
        ),
        # ALTER TABLE oneid_meta_app DROP COLUMN owner_id;
        migrations.AddField(
            model_name='app',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='oneid_meta.Org'),
        ),
        # ----
        migrations.AddField(
            model_name='companyconfig',
            name='org',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_config', to='oneid_meta.Org'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='customfield',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='oneid_meta.Org'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='log',
            name='org',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='oneid_meta.Org'),
        ),
        migrations.AddField(
            model_name='user',
            name='current_organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='oneid_meta.Org'),
        ),
        migrations.AlterUniqueTogether(
            name='orgmember',
            unique_together={('user', 'owner')},
        ),
    ]
